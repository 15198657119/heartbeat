README file for the Application Heartbeats Project (Heartbeats)
-----------------------------------------------------------------

The contents of this README file are:

  Project Description
  Getting Started
  Implementations
  Directory Organization
  Documentation for Heartbeats
  Environment Variables for Heartbeats
  Shared Memory Implementations
  Testing Heartbeats
  Team Members


Project Description
---------------------------------------

The Application Heartbeats framework provides a simple, standardized way for
applications to monitor their performance and make that information available
to external observers. The framework allows programmers to express their
application's goals and the progress that it is making using a simple API.
This progress can then be observed by either the application itself or an
external system (such as the OS or another application) so that the application
or system can be adapted to make sure the goals are met.

The 2.0 version adds support for accuracy and power monitoring. For other
changes, or if upgrading from a previous release, please see the NEWS file.

Source code available at:

  https://github.com/libheartbeats/heartbeats

Original Heartbeats code, website, and discussion group are at:

  http://code.google.com/p/heartbeats/downloads/list
  http://groups.csail.mit.edu/carbon/heartbeats/
  http://groups.google.com/group/heartbeatsapi


Getting Started
---------------------------------------

To build the libraries, run:

$ make

To install the libraries to the local system, run:

$ make install

Headers are installed to /usr/local/include/heartbeats.
The libraries are installed to /usr/local/lib.

To remove the libraries from the local system, run:

$ make uninstall


Implementations
---------------------------------------

There are three main Heartbeats libraries available to choose from:

  libhb-shared.so
    Headers: heartbeat.h, heartbeat-types.h
    Performance monitoring.
  libhb-acc-shared.so
    Headers: heartbeat-accuracy.h, heartbeat-accuracy-types.h
    Performance and accuracy monitoring.
  libhb-acc-pow-shared.so
    Headers: heartbeat-accuracy-power.h, heartbeat-accuracy-power-types.h
    Performance, accuracy, and power monitoring.
    Uses the energymon-default interface to collect energy readings, which the library
    converts to power values. See https://github.com/energymon/energymon


Directory Organization
---------------------------------------

/
|-doc/    -- Documentation
  |-html  -- Documentation in HTML format
  |-latex -- Documentation in latex format
|-inc/    -- Header files
|-src/    -- Source files


Documentation for Heartbeats
---------------------------------------

The documentation for the Heartbeats framework is created with Doxygen.
To build the documentation, run:

  doxygen heartbeats_doc


Environment Variables for Heartbeats
---------------------------------------

In the Heartbeats framework, Heartbeat-enabled applications signal
their presence to the rest of the world by writing a file to a special
directory.  Currently, this directory is specified by an environment
variable: HEARTBEAT_ENABLED_DIR.  Before running the tests, users
should define this variable to point to a directory in which they have
read and write permissions.


Shared Memory Implementations
---------------------------------------

Heartbeats use shared memory to support inter-process communication.
However, they do not clean up after themselves - that is the user's
responsbility.  The following is a simple script to free memory after
processes complete:

#!/bin/bash
# Cleanup heartbeats shared memory
# Connor Imes
# 2015-01-15

MEMS=`ipcs | grep $USER | awk '{print $2}'`
for k in $MEMS
do
        echo Freeing $k
        ipcrm -m $k
done


Testing Heartbeats
---------------------------------------

The latest release of the Heartbeats framework comes with a set of
available tests that can be used to familiarize yourself with this
API. You can run one of our two examples, using the following command
(use it from the root directory of the Heartbeats framework):

  make bench-tp

to use the throughput example, or

  make bench-lat

to use the latency example


Team Members
---------------------------------------

Version 2.x:
  Connor Imes
  Henry Hoffmann

Version 1.x:
  Henry Hoffmann
  Jonathan Eastep
  Marco D. Santambrogio
  Jason E. Miller
  Anant Agarwal
